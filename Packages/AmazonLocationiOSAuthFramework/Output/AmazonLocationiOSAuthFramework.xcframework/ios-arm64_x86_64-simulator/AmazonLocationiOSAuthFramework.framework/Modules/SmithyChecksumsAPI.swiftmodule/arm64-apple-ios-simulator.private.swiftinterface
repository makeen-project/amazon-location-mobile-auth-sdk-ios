// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -package-name smithy_swift -module-name SmithyChecksumsAPI
import Foundation/*.Data*/
import Smithy/*.AttributeKey*/
import Smithy/*.Context*/
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol Checksum {
  var checksumName: Swift.String { get }
  var digestLength: Swift.Int { get }
  func digest() throws -> SmithyChecksumsAPI.HashResult
  func update(chunk: Foundation.Data) throws
  func reset()
  func copy() -> any SmithyChecksumsAPI.Checksum
}
public enum HashResult {
  case data(Foundation.Data)
  case integer(Swift.UInt32)
}
public enum ChecksumAlgorithm {
  case crc32, crc32c, sha1, sha256, md5
  public func toString() -> Swift.String
  public static func == (a: SmithyChecksumsAPI.ChecksumAlgorithm, b: SmithyChecksumsAPI.ChecksumAlgorithm) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension Smithy.Context {
  public var checksum: SmithyChecksumsAPI.ChecksumAlgorithm? {
    get
    set
  }
  public var checksumString: Swift.String? {
    get
  }
}
extension SmithyChecksumsAPI.ChecksumAlgorithm : Swift.Equatable {}
extension SmithyChecksumsAPI.ChecksumAlgorithm : Swift.Hashable {}
