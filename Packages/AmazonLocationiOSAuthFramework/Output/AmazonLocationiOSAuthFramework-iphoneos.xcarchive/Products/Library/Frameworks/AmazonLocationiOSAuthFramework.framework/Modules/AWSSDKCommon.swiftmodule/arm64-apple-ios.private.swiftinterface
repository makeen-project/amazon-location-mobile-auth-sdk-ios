// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -package-name aws_sdk_swift -module-name AWSSDKCommon
import AwsCommonRuntimeKit
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_spi(FileBasedConfig) public typealias CRTFileBasedConfiguration = AwsCommonRuntimeKit.FileBasedConfiguration
@_spi(FileBasedConfig) public typealias CRTFileBasedConfigurationSection = AwsCommonRuntimeKit.FileBasedConfiguration.Section
@_spi(FileBasedConfig) public typealias CRTFileBasedConfigurationSectionType = AwsCommonRuntimeKit.FileBasedConfiguration.SectionType
@_spi(FileBasedConfig) public typealias CRTFileBasedConfigurationProperty = AwsCommonRuntimeKit.FileBasedConfiguration.Section.Property
@_spi(FileBasedConfig) extension AwsCommonRuntimeKit.FileBasedConfiguration : AWSSDKCommon.FileBasedConfiguration {
  @_spi(FileBasedConfig) public static func make(configFilePath: Swift.String? = nil, credentialsFilePath: Swift.String? = nil) throws -> AWSSDKCommon.CRTFileBasedConfiguration
  #if compiler(>=5.3) && $AsyncAwait
  @_spi(FileBasedConfig) public static func makeAsync(configFilePath: Swift.String? = nil, credentialsFilePath: Swift.String? = nil) async throws -> AWSSDKCommon.CRTFileBasedConfiguration
  #endif
  @_spi(FileBasedConfig) public func section(for name: Swift.String, type: AWSSDKCommon.FileBasedConfigurationSectionType) -> (any AWSSDKCommon.FileBasedConfigurationPropertyProviding)?
}
@_spi(FileBasedConfig) extension AwsCommonRuntimeKit.FileBasedConfiguration.Section : AWSSDKCommon.FileBasedConfigurationSection {
  @_spi(FileBasedConfig) public func property(for name: AWSSDKCommon.FileBasedConfigurationKey) -> AWSSDKCommon.FileBasedConfigurationProperty?
}
@_spi(FileBasedConfig) extension AwsCommonRuntimeKit.FileBasedConfiguration.Section.Property : AWSSDKCommon.FileBasedConfigurationSubsection {
  @_spi(FileBasedConfig) public func value(for name: AWSSDKCommon.FileBasedConfigurationKey) -> Swift.String?
}
@_spi(FileBasedConfig) public typealias FileBasedConfiguration = AWSSDKCommon.FileBasedConfigurationSectionProviding
@_spi(FileBasedConfig) public typealias FileBasedConfigurationSection = AWSSDKCommon.FileBasedConfigurationPropertyProviding
@_spi(FileBasedConfig) public typealias FileBasedConfigurationSubsection = AWSSDKCommon.FileBasedConfigurationValueProviding
@_spi(FileBasedConfig) public enum FileBasedConfigurationSectionType {
  @_spi(FileBasedConfig) case profile
  @_spi(FileBasedConfig) case ssoSession
  @_spi(FileBasedConfig) public static func == (a: AWSSDKCommon.FileBasedConfigurationSectionType, b: AWSSDKCommon.FileBasedConfigurationSectionType) -> Swift.Bool
  @_spi(FileBasedConfig) public func hash(into hasher: inout Swift.Hasher)
  @_spi(FileBasedConfig) public var hashValue: Swift.Int {
    @_spi(FileBasedConfig) get
  }
}
@_spi(FileBasedConfig) public struct FileBasedConfigurationSources : Swift.Hashable {
  @_spi(FileBasedConfig) public func hash(into hasher: inout Swift.Hasher)
  @_spi(FileBasedConfig) public static func == (a: AWSSDKCommon.FileBasedConfigurationSources, b: AWSSDKCommon.FileBasedConfigurationSources) -> Swift.Bool
  @_spi(FileBasedConfig) public var hashValue: Swift.Int {
    @_spi(FileBasedConfig) get
  }
}
#if compiler(>=5.3) && $AsyncAwait
@_spi(FileBasedConfig) public typealias FileBasedConfigurationProviding = (_ configFilePath: Swift.String?, _ credentialsFilePath: Swift.String?) async throws -> (any AWSSDKCommon.FileBasedConfigurationSectionProviding)?
#endif
@_spi(FileBasedConfig) public enum FileBasedConfigurationProperty {
  @_spi(FileBasedConfig) case string(Swift.String)
  @_spi(FileBasedConfig) case subsection(any AWSSDKCommon.FileBasedConfigurationValueProviding)
}
@_spi(FileBasedConfig) public protocol FileBasedConfigurationSectionProviding {
  @_spi(FileBasedConfig) func section(for name: Swift.String, type: AWSSDKCommon.FileBasedConfigurationSectionType) -> (any AWSSDKCommon.FileBasedConfigurationPropertyProviding)?
}
@_spi(FileBasedConfig) extension AWSSDKCommon.FileBasedConfigurationSectionProviding {
  @_spi(FileBasedConfig) public func section(for name: Swift.String) -> (any AWSSDKCommon.FileBasedConfigurationPropertyProviding)?
}
@_spi(FileBasedConfig) public protocol FileBasedConfigurationPropertyProviding {
  @_spi(FileBasedConfig) func property(for name: AWSSDKCommon.FileBasedConfigurationKey) -> AWSSDKCommon.FileBasedConfigurationProperty?
}
@_spi(FileBasedConfig) public protocol FileBasedConfigurationValueProviding {
  @_spi(FileBasedConfig) func value(for name: AWSSDKCommon.FileBasedConfigurationKey) -> Swift.String?
}
@_spi(FileBasedConfig) extension AWSSDKCommon.FileBasedConfigurationPropertyProviding {
  @_spi(FileBasedConfig) public func string(for name: AWSSDKCommon.FileBasedConfigurationKey) -> Swift.String?
  @_spi(FileBasedConfig) public func subproperties(for name: AWSSDKCommon.FileBasedConfigurationKey) -> (any AWSSDKCommon.FileBasedConfigurationValueProviding)?
}
@_spi(FileBasedConfig) public struct FileBasedConfigurationKey : Swift.RawRepresentable, Swift.ExpressibleByStringLiteral {
  @_spi(FileBasedConfig) public typealias RawValue = Swift.String
  @_spi(FileBasedConfig) public typealias StringLiteralType = Swift.String
  @_spi(FileBasedConfig) public var rawValue: Swift.String
  @_spi(FileBasedConfig) public init(rawValue: Swift.String)
  @_spi(FileBasedConfig) public init(stringLiteral value: Swift.String)
  @_spi(FileBasedConfig) public typealias ExtendedGraphemeClusterLiteralType = AWSSDKCommon.FileBasedConfigurationKey.StringLiteralType
  @_spi(FileBasedConfig) public typealias UnicodeScalarLiteralType = AWSSDKCommon.FileBasedConfigurationKey.StringLiteralType
}
@_spi(FileBasedConfig) extension AWSSDKCommon.FileBasedConfigurationKey {
  @_spi(FileBasedConfig) public static var region: AWSSDKCommon.FileBasedConfigurationKey {
    @_spi(FileBasedConfig) get
  }
}
@_spi(FileBasedConfig) extension AWSSDKCommon.FileBasedConfigurationSectionType : Swift.Equatable {}
@_spi(FileBasedConfig) extension AWSSDKCommon.FileBasedConfigurationSectionType : Swift.Hashable {}
