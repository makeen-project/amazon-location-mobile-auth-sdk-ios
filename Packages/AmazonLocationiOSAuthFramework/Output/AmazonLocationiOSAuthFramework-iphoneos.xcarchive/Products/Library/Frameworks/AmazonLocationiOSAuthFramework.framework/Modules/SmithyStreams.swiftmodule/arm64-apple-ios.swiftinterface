// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -package-name smithy_swift -module-name SmithyStreams
import AwsCommonRuntimeKit
import Foundation/*.Data*/
import Foundation/*.FileHandle*/
import Foundation/*.NSRecursiveLock*/
import Smithy/*.ByteStream*/
import Smithy/*.Stream*/
import Smithy/*.StreamError*/
import Smithy/*.SwiftLogger*/
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class BufferedStream : Smithy.Stream, @unchecked Swift.Sendable {
  public var length: Swift.Int? {
    get
  }
  public var position: Foundation.Data.Index {
    get
  }
  public var isEmpty: Swift.Bool {
    get
  }
  public var isSeekable: Swift.Bool {
    get
  }
  public var isClosed: Swift.Bool {
    get
  }
  public var bufferCount: Swift.Int {
    get
  }
  public init(data: Foundation.Data? = nil, isClosed: Swift.Bool = false)
  @objc deinit
  public func read(upToCount count: Swift.Int) throws -> Foundation.Data?
  #if compiler(>=5.3) && $AsyncAwait
  public func readAsync(upToCount count: Swift.Int) async throws -> Foundation.Data?
  #endif
  public func readToEnd() throws -> Foundation.Data?
  #if compiler(>=5.3) && $AsyncAwait
  public func readToEndAsync() async throws -> Foundation.Data?
  #endif
  public func write(contentsOf data: Foundation.Data) throws
  public func close()
  public func closeWithError(_ error: any Swift.Error)
}
final public class FileStream : Smithy.Stream {
  final public var length: Swift.Int? {
    get
  }
  final public var position: Foundation.Data.Index
  final public var isEmpty: Swift.Bool {
    get
  }
  final public let isSeekable: Swift.Bool
  public init(fileHandle: Foundation.FileHandle)
  final public func read(upToCount count: Swift.Int) throws -> Foundation.Data?
  #if compiler(>=5.3) && $AsyncAwait
  final public func readAsync(upToCount count: Swift.Int) async throws -> Foundation.Data?
  #endif
  final public func readToEnd() throws -> Foundation.Data?
  #if compiler(>=5.3) && $AsyncAwait
  final public func readToEndAsync() async throws -> Foundation.Data?
  #endif
  final public func seek(toOffset offset: Swift.Int) throws
  final public func write(contentsOf data: Foundation.Data) throws
  final public func close()
  final public func closeWithError(_ error: any Swift.Error)
  @objc deinit
}
public class StreamableHttpBody : AwsCommonRuntimeKit.IStreamable {
  public init(body: Smithy.ByteStream)
  public func length() throws -> Swift.UInt64
  public func seek(offset: Swift.Int64, streamSeekType: AwsCommonRuntimeKit.StreamSeekType) throws
  public func read(buffer: Swift.UnsafeMutableBufferPointer<Swift.UInt8>) throws -> Swift.Int?
  @objc deinit
}
