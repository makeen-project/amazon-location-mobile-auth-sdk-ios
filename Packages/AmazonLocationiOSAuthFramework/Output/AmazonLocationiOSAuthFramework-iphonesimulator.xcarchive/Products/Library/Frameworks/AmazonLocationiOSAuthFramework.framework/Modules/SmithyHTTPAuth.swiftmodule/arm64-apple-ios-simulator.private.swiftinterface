// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -package-name smithy_swift -module-name SmithyHTTPAuth
import AwsCommonRuntimeKit
import AwsCommonRuntimeKit/*.SignatureType*/
import AwsCommonRuntimeKit/*.SignedBodyHeaderType*/
import AwsCommonRuntimeKit/*.SignedBodyValue*/
import AwsCommonRuntimeKit/*.SigningAlgorithmType*/
import AwsCommonRuntimeKit/*.SigningConfig*/
import Foundation/*.Date*/
import Foundation/*.Locale*/
import Foundation/*.TimeInterval*/
import Smithy/*.AttributeKey*/
import Smithy/*.Attributes*/
import SmithyHTTPAPI/*.Headers*/
import SmithyHTTPAuthAPI/*.AWSSignatureType*/
import SmithyHTTPAuthAPI/*.AWSSignedBodyHeader*/
import SmithyHTTPAuthAPI/*.AWSSignedBodyValue*/
import SmithyHTTPAuthAPI/*.IdentityResolverConfiguration*/
import SmithyHTTPAuthAPI/*.SigningAlgorithm*/
import SmithyHTTPAuthAPI/*.SigningFlags*/
import SmithyIdentity/*.AWSCredentialIdentity*/
import SmithyIdentity/*.AWSCredentialIdentityResolver*/
import SmithyIdentity/*.CRTAWSCredentialIdentity*/
import SmithyIdentityAPI/*.IdentityResolver*/
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct AWSSigningConfig {
  public let credentials: SmithyIdentity.AWSCredentialIdentity?
  public let awsCredentialIdentityResolver: (any SmithyIdentity.AWSCredentialIdentityResolver)?
  public let expiration: Foundation.TimeInterval
  public let signedBodyHeader: SmithyHTTPAuthAPI.AWSSignedBodyHeader
  public let signedBodyValue: SmithyHTTPAuthAPI.AWSSignedBodyValue
  public let flags: SmithyHTTPAuthAPI.SigningFlags
  public let date: Foundation.Date
  public let service: Swift.String
  public let region: Swift.String
  public let shouldSignHeader: ((Swift.String) -> Swift.Bool)?
  public let signatureType: SmithyHTTPAuthAPI.AWSSignatureType
  public let signingAlgorithm: SmithyHTTPAuthAPI.SigningAlgorithm
  public init(credentials: SmithyIdentity.AWSCredentialIdentity? = nil, awsCredentialIdentityResolver: (any SmithyIdentity.AWSCredentialIdentityResolver)? = nil, expiration: Foundation.TimeInterval = 0, signedBodyHeader: SmithyHTTPAuthAPI.AWSSignedBodyHeader = .none, signedBodyValue: SmithyHTTPAuthAPI.AWSSignedBodyValue, flags: SmithyHTTPAuthAPI.SigningFlags, date: Foundation.Date, service: Swift.String, region: Swift.String, shouldSignHeader: ((Swift.String) -> Swift.Bool)? = nil, signatureType: SmithyHTTPAuthAPI.AWSSignatureType, signingAlgorithm: SmithyHTTPAuthAPI.SigningAlgorithm)
}
extension SmithyHTTPAuthAPI.SigningAlgorithm {
  public func toCRTType() -> AwsCommonRuntimeKit.SigningAlgorithmType
}
extension SmithyHTTPAuthAPI.AWSSignatureType {
  public func toCRTType() -> AwsCommonRuntimeKit.SignatureType
}
extension SmithyHTTPAuth.AWSSigningConfig {
  public func toCRTType() throws -> AwsCommonRuntimeKit.SigningConfig
}
public struct DefaultIdentityResolverConfiguration : SmithyHTTPAuthAPI.IdentityResolverConfiguration {
  public init(configuredIdResolvers: Smithy.Attributes)
  public func getIdentityResolver(schemeID: Swift.String) throws -> (any SmithyIdentityAPI.IdentityResolver)?
}
extension SmithyHTTPAPI.Headers {
  public func toHttpHeaders() -> [AwsCommonRuntimeKit.HTTPHeader]
  public init(httpHeaders: [AwsCommonRuntimeKit.HTTPHeader])
  public mutating func addAll(httpHeaders: [AwsCommonRuntimeKit.HTTPHeader])
}
