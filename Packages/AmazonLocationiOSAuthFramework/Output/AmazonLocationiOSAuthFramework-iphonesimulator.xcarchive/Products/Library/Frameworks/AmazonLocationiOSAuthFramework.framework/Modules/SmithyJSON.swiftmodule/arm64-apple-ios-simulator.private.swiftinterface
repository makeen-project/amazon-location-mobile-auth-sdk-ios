// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -package-name smithy_swift -module-name SmithyJSON
import CoreFoundation/*.CFBooleanGetTypeID*/
import CoreFoundation/*.CFGetTypeID*/
import Foundation/*.Data*/
import Foundation/*.Date*/
import Foundation/*.JSONSerialization*/
import Foundation/*.NSError*/
import Foundation/*.NSNull*/
import Foundation/*.NSNumber*/
import SmithyReadWrite/*.Document*/
import SmithyReadWrite/*.ReaderError*/
import SmithyReadWrite/*.ReadingClosure*/
import SmithyReadWrite/*.SmithyReader*/
import SmithyReadWrite/*.SmithyWriter*/
import SmithyTimestamps/*.TimestampFormat*/
import SmithyTimestamps/*.TimestampFormatter*/
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct NodeInfo : Swift.Equatable {
  public let name: Swift.String
  public init(_ name: Swift.String)
  public static func == (a: SmithyJSON.NodeInfo, b: SmithyJSON.NodeInfo) -> Swift.Bool
}
extension SmithyJSON.NodeInfo : Swift.ExpressibleByStringLiteral {
  public typealias StringLiteralType = Swift.String
  public init(stringLiteral value: Swift.String)
  public typealias ExtendedGraphemeClusterLiteralType = SmithyJSON.NodeInfo.StringLiteralType
  public typealias UnicodeScalarLiteralType = SmithyJSON.NodeInfo.StringLiteralType
}
extension SmithyJSON.Reader {
  public static func from(data: Foundation.Data) throws -> SmithyJSON.Reader
}
@_hasMissingDesignatedInitializers final public class Reader : SmithyReadWrite.SmithyReader {
  public typealias NodeInfo = SmithyJSON.NodeInfo
  final public let nodeInfo: SmithyJSON.Reader.NodeInfo
  final public var children: [SmithyJSON.Reader] {
    get
  }
  weak final public var parent: SmithyJSON.Reader? {
    get
  }
  final public var hasContent: Swift.Bool {
    get
  }
  @objc deinit
}
extension SmithyJSON.Reader {
  final public subscript(nodeInfo: SmithyJSON.Reader.NodeInfo) -> SmithyJSON.Reader {
    get
  }
  final public func readIfPresent() throws -> Swift.String?
  final public func readIfPresent() throws -> Swift.Int8?
  final public func readIfPresent() throws -> Swift.Int16?
  final public func readIfPresent() throws -> Swift.Int?
  final public func readIfPresent() throws -> Swift.Float?
  final public func readIfPresent() throws -> Swift.Double?
  final public func readIfPresent() throws -> Swift.Bool?
  final public func readIfPresent() throws -> Foundation.Data?
  final public func readIfPresent() throws -> SmithyReadWrite.Document?
  final public func readTimestampIfPresent(format: SmithyTimestamps.TimestampFormat) throws -> Foundation.Date?
  final public func readIfPresent<T>() throws -> T? where T : Swift.RawRepresentable, T.RawValue == Swift.Int
  final public func readIfPresent<T>() throws -> T? where T : Swift.RawRepresentable, T.RawValue == Swift.String
  final public func readMapIfPresent<Value>(valueReadingClosure: (SmithyJSON.Reader) throws -> Value, keyNodeInfo: SmithyJSON.Reader.NodeInfo, valueNodeInfo: SmithyJSON.Reader.NodeInfo, isFlattened: Swift.Bool) throws -> [Swift.String : Value]?
  final public func readListIfPresent<Member>(memberReadingClosure: (SmithyJSON.Reader) throws -> Member, memberNodeInfo: SmithyJSON.Reader.NodeInfo, isFlattened: Swift.Bool) throws -> [Member]?
  final public func readNullIfPresent() throws -> Swift.Bool?
}
extension SmithyJSON.Writer {
  final public func data() throws -> Foundation.Data
}
final public class Writer : SmithyReadWrite.SmithyWriter {
  public typealias NodeInfo = SmithyJSON.NodeInfo
  public init(nodeInfo: SmithyJSON.Writer.NodeInfo)
  required public init(nodeInfo: SmithyJSON.Writer.NodeInfo, parent: SmithyJSON.Writer? = nil)
  @objc deinit
}
extension SmithyJSON.Writer {
  final public subscript(nodeInfo: SmithyJSON.Writer.NodeInfo) -> SmithyJSON.Writer {
    get
  }
  final public func write(_ value: Swift.Bool?) throws
  final public func write(_ value: Swift.String?) throws
  final public func write(_ value: Swift.Double?) throws
  final public func write(_ value: Swift.Float?) throws
  final public func write(_ value: Swift.Int?) throws
  final public func write(_ value: Swift.Int8?) throws
  final public func write(_ value: Swift.Int16?) throws
  final public func write(_ value: Swift.UInt8?) throws
  final public func write(_ value: Foundation.Data?) throws
  final public func write(_ value: SmithyReadWrite.Document?) throws
  final public func writeTimestamp(_ value: Foundation.Date?, format: SmithyTimestamps.TimestampFormat) throws
  final public func write<T>(_ value: T?) throws where T : Swift.RawRepresentable, T.RawValue == Swift.Int
  final public func write<T>(_ value: T?) throws where T : Swift.RawRepresentable, T.RawValue == Swift.String
  final public func writeMap<T>(_ value: [Swift.String : T]?, valueWritingClosure: (T, SmithyJSON.Writer) throws -> Swift.Void, keyNodeInfo: SmithyJSON.Writer.NodeInfo, valueNodeInfo: SmithyJSON.Writer.NodeInfo, isFlattened: Swift.Bool) throws
  final public func writeList<T>(_ value: [T]?, memberWritingClosure: (T, SmithyJSON.Writer) throws -> Swift.Void, memberNodeInfo: SmithyJSON.Writer.NodeInfo, isFlattened: Swift.Bool) throws
  final public func writeNull() throws
}
